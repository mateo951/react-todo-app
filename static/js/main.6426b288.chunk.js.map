{"version":3,"sources":["components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodosList.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","addTodoProps","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","className","type","placeholder","value","name","onChange","target","TodoItem","todo","handleChangeProps","deleteTodoProps","setUpdate","completed","id","editing","setEditing","handleUpdatedDone","event","key","viewMode","editMode","display","styles","item","checkbox","checked","onClick","onDoubleClick","fontStyle","opacity","textDecoration","textInput","onKeyDown","TodosList","todos","map","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","useEffect","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6426b288.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n  return (\n    <header style={headerStyle}>\n      <h1\n        style={{\n          fontSize: '6rem',\n          fontWeight: '600',\n          marginBottom: '2rem',\n          lineHeight: '1em',\n          color: '#ececec',\n          textTransform: 'lowercase',\n          textAlign: 'center',\n        }}\n      >\n        todos\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputTodo = (props) => {\n  const {\n    addTodoProps,\n  } = props;\n\n  const [inputText, setInputText] = useState({\n    title: '',\n  });\n  const onChange = (e) => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputText.title.trim()) {\n      addTodoProps(inputText.title);\n      setInputText({\n        title: '',\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <button type=\"button\" className=\"input-submit\">Submit</button>\n    </form>\n  );\n};\n\nInputTodo.propTypes = {\n  addTodoProps: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  const {\n    todo, handleChangeProps, deleteTodoProps, setUpdate,\n  } = props;\n  const { title, completed, id } = todo;\n\n  const [editing, setEditing] = useState(false);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === 'Enter') {\n      setEditing(false);\n    } else if (event.target.type === 'button') {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  const viewMode = {};\n  const editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  return (\n    <li className={styles.item}>\n      <input\n        type=\"checkbox\"\n        className={styles.checkbox}\n        checked={completed}\n        style={viewMode}\n        onChange={() => handleChangeProps(id)}\n      />\n      <button type=\"button\" style={editMode} onClick={handleUpdatedDone}>Done</button>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <button type=\"button\" onClick={() => deleteTodoProps(id)}>Delete</button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={(e) => {\n          setUpdate(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.string.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  setUpdate: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodosList = (props) => {\n  const {\n    todos, handleChangeProps, deleteTodoProps, setUpdate,\n  } = props;\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={handleChangeProps}\n          deleteTodoProps={deleteTodoProps}\n          setUpdate={setUpdate}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodosList.propTypes = {\n  todos: PropTypes.string.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  setUpdate: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport TodosList from './TodosList';\n\nfunction getInitialTodos() {\n  const temp = localStorage.getItem('todos');\n  const savedTodos = JSON.parse(temp);\n  return savedTodos || [];\n}\n\nconst TodoContainer = () => {\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  const handleChange = (id) => {\n    setTodos((prevState) => prevState.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n      return todo;\n    }));\n  };\n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => todo.id !== id),\n    ]);\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false,\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.title = updatedTitle;\n        }\n        return todo;\n      }),\n    );\n  };\n\n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos);\n    localStorage.setItem('todos', temp);\n  }, [todos]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"inner\">\n        <Header />\n        <InputTodo addTodoProps={addTodoItem} />\n        <TodosList\n          todos={todos}\n          handleChangeProps={handleChange}\n          deleteTodoProps={delTodo}\n          setUpdate={setUpdate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoContainer from './components/TodoContainer';\nimport './App.css';\n\nReactDOM.render(<React.StrictMode><TodoContainer /></React.StrictMode>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3A9st\",\"checkbox\":\"TodoItem_checkbox__ZKRii\",\"textInput\":\"TodoItem_textInput__3Mc8b\"};"],"sourceRoot":""}