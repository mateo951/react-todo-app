{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["TodoItem","state","editing","handleEditing","setState","handleUpdatedDone","event","key","console","log","this","props","todo","completed","id","title","viewMode","editMode","display","className","styles","item","type","checkbox","checked","style","onChange","handleChangeProps","onDoubleClick","onClick","deleteTodoProps","fontStyle","color","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","React","Component","TodosList","todos","map","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","handleSubmit","preventDefault","trim","addTodoProps","alert","name","onSubmit","placeholder","TodoContainer","updatedTitle","addTodoItem","newTodo","uuidv4","handleChange","prevState","delTodo","filter","temp","localStorage","getItem","loadedTodos","JSON","parse","prevProps","stringify","setItem","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8e224346.chunk.js","sourcesContent":["import React from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\n\r\nclass TodoItem extends React.Component {\r\n  state = {\r\n    editing: false,\r\n  }\r\n  handleEditing = () => {\r\n    this.setState({\r\n      editing: true,\r\n    })\r\n  }\r\n  handleUpdatedDone = event => {\r\n    if (event.key === \"Enter\") {\r\n      this.setState({ editing: false })\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"Cleaning up...\")\r\n  }\r\n  render() {\r\n    const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#595959\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\",\r\n    }\r\n    const { completed, id, title } = this.props.todo;\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    if (this.state.editing) {\r\n      viewMode.display = \"none\"\r\n    } else {\r\n      editMode.display = \"none\"\r\n    }\r\n    return (\r\n      <li className={styles.item}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className={styles.checkbox}\r\n          checked={completed}\r\n          style={editMode}\r\n          onChange={() => this.props.handleChangeProps(id)}\r\n        />\r\n        <div onDoubleClick={this.handleEditing} style={viewMode}>\r\n          <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\r\n          <span style={completed ? completedStyle : null}>{title}</span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          style={editMode}\r\n          className={styles.textInput}\r\n          value={title}\r\n          onChange={e => {\r\n            this.props.setUpdate(e.target.value, id)\r\n          }}\r\n          onKeyDown={this.handleUpdatedDone}\r\n        />\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodosList extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.todos.map(todo => (\r\n          <TodoItem \r\n            key={todo.id} \r\n            todo={todo} \r\n            handleChangeProps={this.props.handleChangeProps}\r\n            deleteTodoProps={this.props.deleteTodoProps}\r\n            setUpdate={this.props.setUpdate}\r\n          />\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodosList","import React from \"react\"\r\n\r\nconst Header = () => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"1.5em\",\r\n  }\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1\r\n        style={{\r\n          fontSize: \"6rem\",\r\n          fontWeight: \"600\",\r\n          marginBottom: \"2rem\",\r\n          lineHeight: \"1em\",\r\n          color: \"#ececec\",\r\n          textTransform: \"lowercase\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        todos\r\n      </h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.title.trim()) {\r\n      this.props.addTodoProps(this.state.title)\r\n      this.setState({\r\n        title: \"\",\r\n      })\r\n    } else {\r\n      alert(\"Please write item\")\r\n    }\r\n  };\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Add todo...\"\r\n          value={this.state.title}\r\n          name=\"title\"\r\n          onChange={this.onChange}\r\n        />\r\n        <button className=\"input-submit\">Submit</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass TodoContainer extends React.Component {\r\n  state = {\r\n    todos: [],\r\n  }\r\n  setUpdate = (updatedTitle, id) => {\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.title = updatedTitle\r\n        }\r\n        return todo\r\n      }),\r\n    })\r\n  }\r\n  addTodoItem = title => {\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title: title,\r\n      completed: false\r\n    };\r\n    this.setState({\r\n      todos: [...this.state.todos, newTodo]\r\n    });\r\n  };\r\n  handleChange = id => {\r\n    this.setState(prevState => ({\r\n      todos: prevState.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          }\r\n        }\r\n        return todo\r\n      }),\r\n    }))\r\n  };\r\n  delTodo = id => {\r\n    this.setState({\r\n      todos: [\r\n        ...this.state.todos.filter(todo => {\r\n          return todo.id !== id;\r\n        })\r\n      ]\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ todos: data }));\r\n  }\r\n  componentDidMount() {\r\n    const temp = localStorage.getItem(\"todos\")\r\n    const loadedTodos = JSON.parse(temp)\r\n    if (loadedTodos) {\r\n      this.setState({\r\n        todos: loadedTodos\r\n      })\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevState.todos !== this.state.todos) {\r\n      const temp = JSON.stringify(this.state.todos)\r\n      localStorage.setItem(\"todos\", temp)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"inner\">\r\n          <Header />\r\n          <InputTodo addTodoProps={this.addTodoItem} />\r\n          <TodosList\r\n            todos={this.state.todos}\r\n            handleChangeProps={this.handleChange}\r\n            deleteTodoProps={this.delTodo}\r\n            setUpdate={this.setUpdate}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport TodoContainer from \"./components/TodoContainer\";\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(<React.StrictMode><TodoContainer /></React.StrictMode>, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3A9st\",\"checkbox\":\"TodoItem_checkbox__ZKRii\",\"textInput\":\"TodoItem_textInput__3Mc8b\"};"],"sourceRoot":""}